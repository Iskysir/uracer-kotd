[ x ] GAMEPLAY, RENDERING and CONSIDERATIONS

	x version information should be stored differently, git-log output shouldn't expose so much androidmanifest/etc..

	x LapInfo should be accessed as DriftInfo, single-lived components are better accessible than instance-owned one in this
	  design approach

		- extrapolate the pattern and identify abstractable areas, create a SharedComponent interface with a more meaningful name

	x smoke due to skid marks, a simple and efficient implemention will do it
	x better total drift score's and real-time score's placement, dynamics, logic separation and appearance
	x improve drift detection, provide a simple way to manage different detection policies
	x improve the way missed drifts and associated drift points are exposed to the player *WHILE* playing and producing this event
	x determine optimal texture size for cars, fake ambient occlusion, skid marks and such



[ O ] AUDIO

	x car engine
		x pitch twiddling on the audio stream
		x latency?

	x while producing skid marks
		x latency?

	x on collision
		x LATENCY?

	o sound track
 		o (i don't give a shit about latency in this case)



[ x ] COLLISIONS

	x use collision groups, categories and bitmasking for better definitions



[ x ] LIGHTING SYSTEM

	x 2d dynamic lighting system w/ realtime soft-shadows
	x light attachment to box2d objects
		x filtering system via groupIds then/or/else categoryBits and maskBits (order matters)

		x	+ light.groupId == fixture.groupId
		x		- if (groupId > 0) light will block at the fixture (generate shadow)
		x		- if (groupId < 0) light will ignore the fixture (no shadow)

		x	+ if ((light.maskBits & fixture.categoryBits) != 0)
		x		- light will block at the fixture
		x	+ else
		x		- light will ignore the fixture



[ X ] POST-PROCESSOR API

	x initial release
	x initial APIs
	x test shaders
	x port shaders
	x performance check against raw impl
		- hard-coded weights/offsets, per-vertex computations (24fps)
		- generic convolution filter, pre-computed values (passthrough vertex program), (22/23fps) sysmem-to-gpumem copy overhead?

	x stabilize APIs
		x public void render(FullscreenQuad quad, PingPongBuffer buffer)
		x public void render(FullscreenQuad quad, Texture source, FrameBuffer dest)
		x make sure the current API is flexible enough
	x chain filters to create effects, eg:
		x bloom
			x threshold
			x blur h
			x blur v
			x combine
		x zoom
			x zoom blur
	x filters should implement the setParam paradigm as the Combine filter is doing, will minimize the amount of shader's begin/end context switches
	  when updating ONE single value, not so good for updating multiple values per-frame, this need a bit of work..

[ X ] box2dlights update

	x same/better features than i need?[point in shader/point in light] faster? [not quite]
	x svn project in git?
	x NOT GOING TO UPDATE, SLOW IMPLEMENTATION JUST BY READING IT

[ ] GAME DATA

	- shared between Game and GameLogic
	- can only be modified by GameLogic
	- can be read by whoever need
		? contains DriftInfo
		? contains LapInfo
		? contains Player
		? no more getHud/getLevel in Game

[ ] car

	- draw wheels
	- get graphics' real size in pixels to permit artist to work on it, get pixel size at target resolution (1280x800)


[ ] investigate night-more + bloom + zoom performance drop?
[ ] document map definition, objects, tile types, lights, tileset settings, tile settings
[ ] think, menu as a game level?
[ ] think, cars for drift (max_grip = 3/4/5f), other cars (max_grip = 6/7/8f)
[ ] think, in car::compute_throttle, could be modulated by user's game settings?
[ ] task-based component system, when update() will use GameData shared data internally, thus no params, thus a task-based component system can be created, components'
data in GameData? GameData::<Component>?
[ ] look at, in night-mode, shadows don't take into account time aliasing, producing stuttering in a subframe-interpolated context.
[ ] event listeners as3-style
[ ] think, player drifts will raise a SuPeRpOwA-bAr, in seconds: these seconds can be consumed by using the time dilation super-power for the accumulated drift seconds!
[ ] remember, i'm writing an engine AND a game thus split meanings wisely

[ ] general redesign
	- Hud and DebugHud are completely different things, separate now!!!!
	- car skid marks and car sound effects, it should be simple to allow/disallow enabling them for player or replays, just a matter of attaching things..

[ ] statically check for addListener/removeListener paired usage:

	grep -ERn "\.addListener" * 2>&1 | grep -Ev 'Binary|.*//|.*notifiers'
	grep -ERn "\.removeListener" * 2>&1 | grep -Ev 'Binary|.*//|.*notifiers'


GAME

	3 main classes of cars
		a, b, c

			more than one car for type, wide choice

		rankings based on classes, a player can choose to play only against player of the same class.

	- player accumulates time dilation duration capabilities by drifting, the more seconds he drifts, the more seconds he can time dilate by.
	- gameplay
		- show user name, level and rank positions on screen, enable the player to figure out its rank for any given track with any given car's level.
		- figure out a VERY simple model of multiplayer gameplay, but only a VERY ADDICTING one, something
		like a simple-to-grasp-at-first-yet-practice-will-make-you-better! thing (YaY!)

		- when the player collides, automatically discharge its time dilation credits completely, stop the time dilation and make a "mistake" gfx
		- if a warm-lap is being enforced (tournament, important races..) it would be cool to darken the scene for the very first lap (warm lap), make it
		clear its a warm lap, then bloom as 0->1->0 by tweening an InOutExpo/InOutQuad to make it fade to white and back, post-process the scene as something
		epic and clearly different ambience, it's an IMPORTANT race!

		- automatic opponent selection? always tournament, always start new account from the bottom..

	- think about gameplay subdivision: single player, multi-player (local/online)



ReplayManager

	RESPONSIBILITIES
		- maintains the best <n> records
		- load/save replays

SITE FAQ

Q: I'm a supporter of the flat earth theory (http://theflatearthsociety.org/cms/), could you remove the earth curvature feature?
A: You can disable it in the options and that's all there is to it, unbeliever!



REDDIT (2012/12/07, 2nd WIP, the "switch to the desktop" announcement sort-of)

(see reddit-post.txt)






20130407
	+ test multisampling (performance vs quality)
	 
20130612
	+ add multisampling option to bootconfig
	x completely overhaul ReplayManager, make Replay implements the Comparable interface
	x move Replay recording and replaying logic to SinglePlayerLogic
	x think about Replay classification for immediate user feedback messages
	+ singleplayer/multiplayer logic recap
	- music, test multitrack volume changes for smooth transitions
	+ review userId, trackId passing
	- make boot options configurable, set some sensible defaults (1280x800, vsync, no fullscreen..)
	? LogicState for a centralized place to share between components for stuff such as updated driftStrength, speed.. ??

20130618
	- add multisampling option to bootconfig
	o review userId, trackId passing
	- singleplayer/multiplayer logic recap
	- music, test multitrack volume changes for smooth transitions
	- make boot options configurable, set some sensible defaults (1280x800, vsync, no fullscreen..)
	? LogicState for a centralized place to share between components for stuff such as updated driftStrength, speed.. ??

20130623
	- add multisampling option to bootconfig
	o review userId, trackId passing
	- singleplayer/multiplayer logic recap
	- music, test multitrack volume changes for smooth transitions
	- make boot options configurable, set some sensible defaults (1280x800, vsync, no fullscreen..)
	x move debug logic out of CommonLogic
	+ switch keyboard shortcuts, tab for the whole debug panel, perf graph, version too?
	+ show replay state, load and save accordingly
	? LogicState for a centralized place to share between components for stuff such as updated driftStrength, speed.. ??

20130624
	- add multisampling option to bootconfig
	o review userId, trackId passing
	o singleplayer/multiplayer logic recap
	- music, test multitrack volume changes for smooth transitions
	- make boot options configurable, set some sensible defaults (1280x800, vsync, no fullscreen..)
	- switch keyboard shortcuts, tab for the whole debug panel, perf graph, version too?
	- show replay state, load and save accordingly
	? LogicState for a centralized place to share between components for stuff such as updated driftStrength, speed.. ??

20130625
	- add multisampling option to bootconfig
	o review userId, trackId passing
	o singleplayer/multiplayer logic recap
	- music, test multitrack volume changes for smooth transitions
	- make boot options configurable, set some sensible defaults (1280x800, vsync, no fullscreen..)
	o switch keyboard shortcuts, tab for the whole debug panel, perf graph, version too?
	- show replay state, load and save accordingly
	? LogicState for a centralized place to share between components for stuff such as updated driftStrength, speed.. ??
	+ non-in-game music, find best tracks

20130626
	- add multisampling option to bootconfig
	o review userId, trackId passing
	O singleplayer/multiplayer logic recap
	- music, test multitrack volume changes for smooth transitions
	- make boot options configurable, set some sensible defaults (1280x800, vsync, no fullscreen..)
	x switch keyboard shortcuts, tab for the whole debug panel, perf graph, version too?
	- show replay state, load and save accordingly
	? LogicState for a centralized place to share between components for stuff such as updated driftStrength, speed.. ??
	- non-in-game music, find best tracks
	+ refine keyboard controls
	o new debug keyboard controls

20130628
	? LogicState for a centralized place to share between components for stuff such as updated driftStrength, speed.. ??
	o review userId, trackId passing
	O singleplayer/multiplayer logic recap
	- show replay state, load and save accordingly
	- music, test multitrack volume changes for smooth transitions
	- make boot options configurable, set some sensible defaults (1280x800, vsync, no fullscreen..)
	- add multisampling option to bootconfig
	- non-in-game music, find best tracks
	x refine keyboard controls
	x new debug keyboard controls

20130629
	(opt) LogicState for a centralized place to share between components for stuff such as updated driftStrength, speed.. ??
	o review userId, trackId passing
	O singleplayer/multiplayer logic recap
	- show replay state, load and save accordingly
	- music, test multitrack volume changes for smooth transitions
	- make boot options configurable, set some sensible defaults (1280x800, vsync, no fullscreen..)
	- add multisampling option to bootconfig
	- non-in-game music, find best tracks

20130630
	(opt) LogicState for a centralized place to share between components for stuff such as updated driftStrength, speed.. ??
	O review userId, trackId passing
	O singleplayer/multiplayer logic recap
	- show player position and replay state
	x load and save Replay correctly
	- music, test multitrack volume changes for smooth transitions
	- make boot options configurable, set some sensible defaults (1280x800, vsync, no fullscreen..)
	- add multisampling option to bootconfig
	- non-in-game music, find best tracks

20130702
	(opt) LogicState for a centralized place to share between components for stuff such as updated driftStrength, speed.. ??
	O review userId, trackId passing
	O singleplayer/multiplayer logic recap
	x [dbg] show player position and replay state
	+ show *proper* hud for both live rankings
	+ engine sound
	+ better drift sound
	+ volumes config
	x load and save Replay correctly
	- music, test multitrack volume changes for smooth transitions
	- make boot options configurable, set some sensible defaults (1280x800, vsync, no fullscreen..)
	- add multisampling option to bootconfig
	- non-in-game music, find best tracks

20130705
	(opt) LogicState for a centralized place to share between components for stuff such as updated driftStrength, speed.. ??
	O review userId, trackId passing
	O singleplayer/multiplayer logic recap
	x [dbg] show player position and replay state
	+ show *proper* hud for both live rankings
	+ engine sound
	+ better drift sound
	+ volumes config
	x load and save Replay correctly
	- music, test multitrack volume changes for smooth transitions
	- make boot options configurable, set some sensible defaults (1280x800, vsync, no fullscreen..)
	- add multisampling option to bootconfig
	- non-in-game music, find best tracks
	+ global soft shadows

20130706
	(opt) LogicState for a centralized place to share between components for stuff such as updated driftStrength, speed.. ??
	O review userId, trackId passing
	O singleplayer/multiplayer logic recap
	x [dbg] show player position and replay state
	+ show *proper* hud for both live rankings
	+ engine sound
	+ better drift sound
	+ volumes config
	x load and save Replay correctly
	- music, test multitrack volume changes for smooth transitions
	- make boot options configurable, set some sensible defaults (1280x800, vsync, no fullscreen..)
	- add multisampling option to bootconfig
	- non-in-game music, find best tracks
	- global soft shadows
	+ highlight next/prev best opponent via TAB key
		- fix orientation not interpolated
		- fix, add setshadowsenabled to ghostcars to avoid ssao on them

20130707
	(opt) LogicState for a centralized place to share between components for stuff such as updated driftStrength, speed.. ??
	O review userId, trackId passing
	O singleplayer/multiplayer logic recap
	x [dbg] show player position and replay state
	+ show *proper* hud for both live rankings
	+ engine sound
	+ better drift sound
	+ volumes config
	x load and save Replay correctly
	- music, test multitrack volume changes for smooth transitions
	- make boot options configurable, set some sensible defaults (1280x800, vsync, no fullscreen..)
	- add multisampling option to bootconfig
	- non-in-game music, find best tracks
	- global soft shadows
	- highlight next/prev best opponent via TAB key
		- fix orientation not interpolated
		- fix, add setshadowsenabled to ghostcars to avoid ssao on them
	+ add pause!