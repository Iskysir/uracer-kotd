[ x ] GAMEPLAY, RENDERING and CONSIDERATIONS

	x version information should be stored differently, git-log output shouldn't expose so much androidmanifest/etc..

	x LapInfo should be accessed as DriftInfo, single-lived components are better accessible than instance-owned one in this
	  design approach
	  
		- extrapolate the pattern and identify abstractable areas, create a SharedComponent interface with a more meaningful name

	x smoke due to skid marks, a simple and efficient implemention will do it
	x better total drift score's and real-time score's placement, dynamics, logic separation and appearance
	x improve drift detection, provide a simple way to manage different detection policies
	x improve the way missed drifts and associated drift points are exposed to the player *WHILE* playing and producing this event
	x determine optimal texture size for cars, fake ambient occlusion, skid marks and such



[   ] AUDIO

	x car engine
		x pitch twiddling on the audio stream
		x latency?
		
	x while producing skid marks
		x latency?
		
	x on collision
		x LATENCY?
		
	- sound track
 		- (i don't give a shit about latency in this case)



[ x ] COLLISIONS

	x use collision groups, categories and bitmasking for better definitions


	 
[ x ] LIGHTING SYSTEM

	x 2d dynamic lighting system w/ realtime soft-shadows
	x light attachment to box2d objects
		x filtering system via groupIds then/or/else categoryBits and maskBits (order matters)
		
		x	+ light.groupId == fixture.groupId
		x		- if (groupId > 0) light will block at the fixture (generate shadow)
		x		- if (groupId < 0) light will ignore the fixture (no shadow)
			
		x	+ if ((light.maskBits & fixture.categoryBits) != 0)
		x		- light will block at the fixture
		x	+ else
		x		- light will ignore the fixture



[  ] POST-PROCESSOR API

	x initial release
	x initial APIs
	x test shaders
	x port shaders
	x performance check against raw impl
		- hard-coded weights/offsets, per-vertex computations (24fps)
		- generic convolution filter, pre-computed values (passthrough vertex program), (22/23fps) sysmem-to-gpumem copy overhead?
		
	- stabilize APIs
		? public void render(FullscreenQuad quad, PingPongBuffer buffer)
		? public void render(FullscreenQuad quad, Texture source, FrameBuffer dest)
	- ..